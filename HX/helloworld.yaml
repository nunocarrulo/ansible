---
- hosts:  tbd
  connection: local
  gather_facts: no
  tasks:
    - name: Collect only Datetime facts 
      setup:
        filter: ansible_date_time

    - name: Association and ESXi Installation 
      pause:
        prompt: "Start time: {{ ansible_date_time.iso8601 }} {{ansible_date_time.tz }} 
        \nDid installation complete for all ESXi (yes/no) ? If 'no', Do NOT proceed or ESXi Installation may fail!"
        echo: yes
      register: assign_response
      #run_once: true
      retries: 10
      delay: 1
      until: assign_response.user_input == 'yes'


    # - name: Waiting for all Servers to complete SP Disassociation (every 2min) # retries every 2min, for 1h. [Approx 15min]
    #   cisco.ucs.ucs_query:
    #     <<: *ucsm_login
    #     #class_ids: computeItem #"{{ item.dn }}"
    #     distinguished_names: "{{ item }}"
    #   register: res
    #   when: cleanup_dnlist is defined
    #   until:  assocState  == 'none'
    #   loop: "{{ cleanup_dnlist }}"
    #   retries: 120
    #   delay: 10
    #   tags: ["spdisassoc2"]
    
    # - name: Printing
    #   debug:
    #     msg: 
    #       #- "{{ res.objects  }}" #"{{ item  }}"
    #       - "{{ assocState }}" 
    #   until: assocState  == 'none'
    #   when: cleanup_dnlist is defined
    #   #loop: "{{ cleanup_dnlist }}"
    #   tags: ["spdisassoc2"]

        # - name: Waiting for all Servers to complete Cleanup SP Association ... 
    #   cisco.ucs.ucs_query:
    #     <<: *ucsm_login
    #     distinguished_names: "{{ item }}"
    #   loop: "{{ assocSearch }}"
    #   # until: assocState == 'associated' #and assocRes.assoc_state == 'associated'
    #   # retries: 24     
    #   # delay: 300
    #   register: assocRes
    #   tags: ["spassoc2"]

            # - name: Debug Associate Cleanup SPs
        #   debug:
        #     msg: "{{ item.key}} : {{item.value }}"
        #     #msg: "{{ comboSPDN }}"
        #   with_dict: item
        #   loop: "{{ comboSPDN }}"
        #   delegate_to: "{{ worker }}"